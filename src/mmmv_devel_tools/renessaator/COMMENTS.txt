===========================================================================
==========================  Renessaator  ==================================
===========================================================================

Renessaator is a Ruby application for inline code generation.

It's like the PHP and Java Server Pages, except that in stead
of generating HTML by inlining blocks of PHP or Java, 
one generates source of one programming language by 
inlining blocks of other programming language.

Programming language to be generated is determined by a 
file name extension and the generating programming language is
declared within the source code generation block.

Currently supported generating languages are: Ruby, PHP

Currently supported target languages are: 
    Ruby, PHP, C++, JavaScript, C, Java

Generating code can get its origin file path from an 
environment variable "S_FP_RENESSAATOR_BLOCK_ORIGIN".

Examples can be found from ./doc/lesson_01_hello_world

---------------------------------------------------------------------------
                         Table of Contents
---------------------------------------------------------------------------
1. Use Cases
2. Dependencies
3. Caveats
4. List of Similar Projects by Third Parties

---------------------------------------------------------------------------
                           1. Use Cases
---------------------------------------------------------------------------
As of 2012.07 it seems to me, martin.vahi@softf1.com, 
that the only scenarios, where renessaator is useful, are:

x) Dumb, built-in, structured code duplication, like most of the C++ and 
   C header files.

x) Speed-optimized code, where the algorithm properties make it 
   unacceptably laborious to write the code manually. 
   (One possible scheme of a speed-optimized algorithm that is too 
   laborious to implement manually: generate tables, apply optimizations, 
   and then write the code according to the tables.)

x) Code, where reflection can not be used due to speed considerations.

x) Cases, where reflection or OO techniques in general would 
   hinder IDE code completion support. For example, locally declared
   variables are likely to be offered by the IDE code completion,
   but dynamically created variables (JavaScript, Ruby, etc.) are
   firmly known only at run time and lack the IDE code completion support.

x) May be in conjunction with something like the ASN.1 compiler?
   http://ttsiodras.github.io/asn1.html
   http://download.tuxfamily.org/taste/misc/presentation.pdf

---------------------------------------------------------------------------
                        2. Dependencies
---------------------------------------------------------------------------

Tested with Ruby 2.3.x, will NOT work with Ruby 2.4.x and newer.
Bash and other common Linux command line tools.

The Renessaator and its applications depend heavily on the 
Kibuvits Ruby Library (http://kibuvits.rubyforge.org/ ), 
which is bundled with the mmmv_devel_tools package.

---------------------------------------------------------------------------
                            3. Caveats
---------------------------------------------------------------------------

Currently Renessaator can not be used on HTML or XML without 
using some quirks, because the HTML and the XML do not have 
single-liner comment tags. Internally the Renessaator connects 
subsequent single-liner comments to a single comment block, 
which means that the absence of single-liner commenting
possibility is not a fundamental showstopper, but a shortcoming 
from the perspective of the current implementation of the Renessaator. 
As there is a quirky workaround that allows code to be generated to 
programming/description languages that do not have 
single-liner comment tags, a proper, elegant, solution to
that issue will probably never be implemented, at least
not by me(Martin.Vahi@softf1.com). The documentation
includes a demo, how to generate code to HTML files.


---------------------------------------------------------------------------
              4. List of Similar Projects by Third Parties
---------------------------------------------------------------------------

x) ribosome 
       https://github.com/sustrik/ribosome
       http://sustrik.github.io/ribosome/
   by Martin SÃºstrik
       http://250bpm.com/


===========================================================================

